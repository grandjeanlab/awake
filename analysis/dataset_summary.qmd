---
title: "summary of the datasets"
author: "Joanes Grandjean"
date: "19/6/2025"
format: gfm
jupyter: python3
execute: 
  warning: false
---

We accumulated datasets from several laboratories. Here, we carry out a descriptive summary of the dataset and its processing.

```{python}
#| eval: false
#only run this in interactive mode to turn off the autoindent in ipython
%autoindent 
```

```{python}
import polars as pl

def get_rodent_summary(df):
    # Get a summary of the total number of runs, excluded runs and number of animals
    df_summary = df.group_by("rodent.ds").agg([
        pl.count().alias("total_run"),
        (pl.col("exclude").is_null().sum()).alias("total_included"),
        pl.col("rodent.sub").n_unique().alias("total_animal"),
        pl.col("rodent.strain").unique().first().alias("strain"),
        (pl.col("rodent.sex") == 'm').sum().alias("male"),
        (pl.col("rodent.sex") == 'f').sum().alias("female"),
        pl.col("rodent.sex").is_null().sum().alias("unknownsex"),
        pl.col("head-plate").unique().first().alias("headplate"),
        pl.col("body.restrained").unique().first().alias("restrained"),
        pl.col("anesthesia.before.acquisition").unique().first().alias("anesthesia"),
        pl.col("main.experimenter.gender").unique().first().alias("exp.gender"),
        pl.col("MRI.field.strength").unique().first().alias("field_strength"),
        pl.col("fMRI.sequence").unique().first().alias("sequence"),
        pl.col("MRI.TE").unique().first().alias("TE"),
    ])
    df_summary = df_summary.with_columns([
        (pl.col("total_included") / pl.col("total_run") * 100).alias("included_percentage")
    ])
    return df_summary


    

for rodent in [ "mouse", "rat" ]:
# Read the CSV file
  df = pl.read_csv("../assets/tables/"+rodent+"_metadata.tsv", separator="\t", ignore_errors=True)
# Create a new column "scan"
  df = df.with_columns([
      pl.concat_str([
          pl.lit("sub-0"),
          pl.col("rodent.sub").cast(pl.Utf8),
          pl.lit("_ses-"),
          pl.col("rodent.session").cast(pl.Utf8),
          pl.lit("_run-"),
          pl.col("rodent.run").cast(pl.Utf8)
      ]).alias("scan")
  ])
# Get the rodent summary
  df_summary = get_rodent_summary(df)
# Save the table for later use
  df_summary.write_csv("../assets/tables/"+rodent+"_summary.tsv", separator="\t")
  print("now doing "+rodent)
  print(df_summary["rodent.ds", "total_run", "total_included", "total_animal", "male", "female", "exp.gender"].sort(by='rodent.ds'))

```


